# LoL Prior --> Interpretation linear mixed effect model
# Latent mixture allowing for both two types of agreers and two types of disagreers
# (by participant, in tandem; 2 overall types of participants)

model{

    	sigma ~ dgamma(1.5,2)
	s = pow(sigma,-2)
	mu1 = rep(.5,nBeta)
	mu2 = rep(.5,nBeta)
	mu3 = rep(.5,nBeta)
	mu4 = rep(.5,nBeta)
	BETA_agree1 ~ dmnorm(mu1,bPrec)
	BETA_agree2 ~ dmnorm(mu2,bPrec)
	BETA_disagree1 ~ dmnorm(mu3,bPrec)
	BETA_disagree2 ~ dmnorm(mu4,bPrec)
	tau ~ dgamma(1.5,2)
	t= pow(tau,-2)
	phi ~ dunif(0,1)
	sigma_psi ~ dgamma(1.5,2)
	s_psi = pow(sigma_psi,-2)

  for (i in 1:nParticipants){
	alpha[i] ~ dnorm(0,t)
	psi[i] ~ dnorm(phi,s_psi)T(0,1)

	for(j in 1:nTrials){
		psi_bern[j+((i-1)*nTrials)] ~ dbern(psi[i])
	    	Y[j+((i-1)*nTrials)] ~ dnorm(inprod(BETA_agree1, X_agree[j+((i-1)*nTrials),])*equals(psi_bern[i],1) 
		+ inprod(BETA_agree2, X_agree[j+((i-1)*nTrials),])*equals(psi_bern[i],0)
		+ inprod(BETA_disagree1, X_disagree[j+((i-1)*nTrials),])*equals(psi_bern[i],1) 
		+ inprod(BETA_disagree2, X_disagree[j+((i-1)*nTrials),])*equals(psi_bern[i],0) 
		+ alpha[i],s)

		Ypred[j+((i-1)*nTrials)] ~ dnorm(inprod(BETA_agree1, X_agree[j+((i-1)*nTrials),])*equals(psi_bern[i],1) 
		+ inprod(BETA_agree2, X_agree[j+((i-1)*nTrials),])*equals(psi_bern[i],0)
		+ inprod(BETA_disagree1, X_disagree[j+((i-1)*nTrials),])*equals(psi_bern[i],1) 
		+ inprod(BETA_disagree2, X_disagree[j+((i-1)*nTrials),])*equals(psi_bern[i],0) 
		+ alpha[i],s)
	}
  }
}
