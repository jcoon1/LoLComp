# LoL Prior --> Interpretation linear mixed effect model
# Latent mixture allowing for two types of disagreers


model{
	sigma_exp ~ dgamma(1.5,2)
	sigma_con ~ dgamma(1.5,2)
	sigma_nov ~ dgamma(1.5,2)
	s_exp = pow(sigma_exp,-2)
	s_con = pow(sigma_con,-2)
	s_nov = pow(sigma_nov,-2)
	sVec = c(s_exp, s_con)

    	sigma ~ dgamma(1.5,2)
	s = pow(sigma,-2)
	mu = rep(.5,nBeta)
	BETA ~ dmnorm(mu,bPrec)
	tau ~ dgamma(4,10)
	t= pow(tau,-2)
	phi_disagree ~ dunif(0,1)
	sigma_psi ~ dgamma(4,10)
	s_psi = pow(sigma_psi,-2)

  for (i in 1:nExperts){
	alpha[i] ~ dnorm(0,t)
	psi_disagree[i] ~ dnorm(phi_disagree,s_psi)T(0,1)}
  
  for(i in 1:nExperts_agree){

  	for(j in 1:nAgree[i]){
		#index = j + sum(nAgree[1:i]) - nAgree[i]

		Y_agree[index_agree[i,j]] ~ dnorm(inprod(BETA, X_agree[index_agree[i,j],]) 
		+ Participant_list_agree[index_agree[i,j]],s_exp)
  	}
   }

   for(i in 1:nExperts_disagree){

  	for(j in 1:nDisagree[i]){
		#index = j + sum(nDisagree[1:i]) - nDisagree[i]

		psi_disagree_bern[index_disagree[i,j]] ~ dbern(psi_disagree[Participant_list_disagree[index_disagree[i,j]]])
		z1[index_disagree[i,j]] = equals(psi_disagree_bern[index_disagree[i,j]],0)
		z2[index_disagree[i,j]] = equals(psi_disagree_bern[index_disagree[i,j]],1)
		

    		Y_disagree[index_disagree[i,j]] ~ dnorm(inprod(BETA, X_disagree[index_disagree[i,j],])*equals(psi_disagree_bern[index_disagree[i,j]],0) 
		+ alpha[Participant_list_disagree[index_disagree[i,j]]]*X_disagree[index_disagree[i,j],1]*equals(psi_disagree_bern[index_disagree[i,j]],0)
		+ (Prior[index_disagree[i,j]]*equals(psi_disagree_bern[index_disagree[i,j]],1)),
		inprod(c(z1[index_disagree[i,j]],z2[index_disagree[i,j]]),sVec))
	}
  }

  #for(m in 1:nNovices){
	#ticker = m + nExperts
	#alpha[ticker] ~ dnorm(0,t)

	#for(n in 1:nTrials){
		#Y_novice[m] ~ dnorm(inprod(BETA, X[m,]) + alpha[i],
					#inprod(z[j+((i-1)*nTrials),],s_nov))
		#}
	#}
}
