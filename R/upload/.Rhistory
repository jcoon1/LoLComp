comp6_listener_pool_temp<- SONAData[which(SONAData$CompType==6),]
listener_pool <- comp6_listener_pool_temp$LateResponse[which(comp6_listener_pool_temp$SpeakerLate==1)]
sanity_check_late[2,6]<- mean(listener_pool)
for(i in 1:nrow(comp6_full_pool_late)){
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_late_diffs_nov[i,] <- temp_pulls-comp6_full_pool_late[i]
}
sanity_check_early[3,] <- sanity_check_early[2,]-sanity_check_early[1,]
sanity_check_late[3,] <- sanity_check_late[2,]-sanity_check_late[1,]
sanity_check_early[5,] <- sanity_check_early[3,] * sanity_check_early[4,]
sum(sanity_check_early[5,])/sum(sanity_check_early[4,])
sanity_check_late[5,] <- sanity_check_late[3,] * sanity_check_late[4,]
sum(sanity_check_late[5,])/sum(sanity_check_late[4,])
sanity_check_early[6,] <- mean(c(SONAData$EarlyResponse[which(SONAData$SpeakerEarly==1)],
SONAData$LateResponse[which(SONAData$SpeakerLate==1)]))
sanity_check_late[6,] <- mean(c(SONAData$EarlyResponse[which(SONAData$SpeakerEarly==1)],
SONAData$LateResponse[which(SONAData$SpeakerLate==1)]))
sanity_check_early[7,] <- sanity_check_early[6,]-sanity_check_early[1,]
sanity_check_late[7,] <- sanity_check_late[6,]-sanity_check_late[1,]
sanity_check_early[8,] <- sanity_check_early[7,] * sanity_check_early[4,]
sum(sanity_check_early[8,])/sum(sanity_check_early[4,])
sanity_check_late[8,] <- sanity_check_late[7,] * sanity_check_late[4,]
sum(sanity_check_late[8,])/sum(sanity_check_late[4,])
par(mfrow=c(3,2))
hist(comp1_early_diffs_nov)
hist(comp2_early_diffs_nov)
hist(comp3_early_diffs_nov)
hist(comp4_early_diffs_nov)
hist(comp5_early_diffs_nov)
hist(comp6_early_diffs_nov)
hist(comp1_late_diffs_nov)
hist(comp2_late_diffs_nov)
hist(comp3_late_diffs_nov)
hist(comp4_late_diffs_nov)
hist(comp5_late_diffs_nov)
hist(comp6_late_diffs_nov)
all_nov_diff <- c(comp1_late_diffs_nov,comp2_late_diffs_nov,comp3_late_diffs_nov,
comp4_late_diffs_nov,comp5_late_diffs_nov,comp6_late_diffs_nov,
comp1_early_diffs_nov,comp2_early_diffs_nov,comp3_early_diffs_nov,
comp4_early_diffs_nov,comp5_early_diffs_nov,comp6_early_diffs_nov)
all_nov_diff_desc <- c(mean(all_nov_diff),sd(all_nov_diff))
# Experienced Distance Simulation -----------------------------------------
nPulls = 100
comp1_early_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_early)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_early_diffs_exp[i,] <- temp_pulls-comp1_full_pool_early[i]
}
comp1_late_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_late)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_late_diffs_exp[i,] <- temp_pulls-comp1_full_pool_late[i]
}
comp2_early_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_early)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_early_diffs_exp[i,] <- temp_pulls-comp2_full_pool_early[i]
}
comp2_late_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_late)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_late_diffs_exp[i,] <- temp_pulls-comp2_full_pool_late[i]
}
comp3_early_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_early)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_early_diffs_exp[i,] <- temp_pulls-comp3_full_pool_early[i]
}
comp3_late_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_late)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_late_diffs_exp[i,] <- temp_pulls-comp3_full_pool_late[i]
}
comp4_early_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_early)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_early_diffs_exp[i,] <- temp_pulls-comp4_full_pool_early[i]
}
comp4_late_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_late)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_late_diffs_exp[i,] <- temp_pulls-comp4_full_pool_late[i]
}
comp5_early_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_early)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_early_diffs_exp[i,] <- temp_pulls-comp5_full_pool_early[i]
}
comp5_late_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_late)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_late_diffs_exp[i,] <- temp_pulls-comp5_full_pool_late[i]
}
comp6_early_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_early)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_early_diffs_exp[i,] <- temp_pulls-comp6_full_pool_early[i]
}
comp6_late_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_late)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_late_diffs_exp[i,] <- temp_pulls-comp6_full_pool_late[i]
}
par(mfrow=c(2,1))
all_exp_diff <- c(comp1_late_diffs_exp,comp2_late_diffs_exp,comp3_late_diffs_exp,
comp4_late_diffs_exp,comp5_late_diffs_exp,comp6_late_diffs_exp,
comp1_early_diffs_exp,comp2_early_diffs_exp,comp3_early_diffs_exp,
comp4_early_diffs_exp,comp5_early_diffs_exp,comp6_early_diffs_exp)
hist(c(all_exp_diff),xlim=c(-1,1))
hist(all_nov_diff,xlim=c(-1,1))
par(mfrow=c(3,2))
hist(comp1_early_diffs_exp)
hist(comp2_early_diffs_exp)
hist(comp3_early_diffs_exp)
hist(comp4_early_diffs_exp)
hist(comp5_early_diffs_exp)
hist(comp6_early_diffs_exp)
hist(comp1_late_diffs_exp)
hist(comp2_late_diffs_exp)
hist(comp3_late_diffs_exp)
hist(comp4_late_diffs_exp)
hist(comp5_late_diffs_exp)
hist(comp6_late_diffs_exp)
# Range graph -------------------------------------------------------------
range_size <- seq(.000,.7,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1 - range_percent_exp
range_percent_nov <- 1 - range_percent_nov
par(mfrow=c(1,1))
par(mar = c(3.5, 3, 1, 2))
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,.7),lty=2, col = "red",
lwd = 2,xlab = " ", ylab = " ",axes = FALSE)
points(x = range_size, y = range_percent_nov,type="l",col = "blue",lty = 3, lwd = 2)
legend(.36,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('red',"blue"),
cex = 1.3,bty = 'n',
y.intersp = 1)
title(xlab="Miscommunication Limit", line=1.8, cex.lab=1.8)
title(ylab="Proportion Beyond Limit", line=1.5, cex.lab=1.8)
axis(side=1,pos=0,cex.axis = 1.6,lwd = 2)
axis(side = 2, pos=0,cex.axis = 1.6,lwd = 2)
# Histograms of diff ------------------------------------------------------
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,1,.4)
c2 <- rgb(1,0,0,.4)
plot(hgB, col = c2, axes = FALSE, xlab = '', ylab = '', main = '') # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
axis(side=1,pos=.75,cex.axis = 1.6,lwd = 2)
axis(side = 2, pos=-1,cex.axis = 1.6,lwd = 2,labels = FALSE, tick = FALSE)
legend(.18,80000, c( "Experienced Listener","Inexperienced Listener"), col=c(c2, c1), lwd=10,cex = 1.3,
bty = 'n')
title(xlab="Experienced Speaker - Listener", line=1.8, cex.lab=1.8)
length(which(OnlineData$EarlyTVJ==1))
length(which(OnlineData$LateTVJ==1))
346+333
comp1_early_diffs_nov <- matrix(NaN, nrow = nrow(comp1_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
comp1_listener_pool_temp<- SONAData[which(SONAData$CompType==1),]
listener_pool <- comp1_listener_pool_temp$EarlyResponse[which(comp1_listener_pool_temp$SpeakerEarly==1)]
sanity_check_early[2,1]<- mean(listener_pool)
for(i in 1:nrow(comp1_full_pool_early)){
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
comp1_early_diffs_nov[i,j] <- listener_pool[pull_index] - comp1_full_pool_early[i]
}
}
length(listener_pool)
33*12
nPulls = 100
comp1_early_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_early)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_early_diffs_exp[i,] <- temp_pulls-comp1_full_pool_early[i]
}
comp1_late_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_late)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_late_diffs_exp[i,] <- temp_pulls-comp1_full_pool_late[i]
}
comp2_early_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_early)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_early_diffs_exp[i,] <- temp_pulls-comp2_full_pool_early[i]
}
comp2_late_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_late)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_late_diffs_exp[i,] <- temp_pulls-comp2_full_pool_late[i]
}
comp3_early_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_early)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_early_diffs_exp[i,] <- temp_pulls-comp3_full_pool_early[i]
}
comp3_late_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_late)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_late_diffs_exp[i,] <- temp_pulls-comp3_full_pool_late[i]
}
comp4_early_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_early)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_early_diffs_exp[i,] <- temp_pulls-comp4_full_pool_early[i]
}
comp4_late_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_late)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_late_diffs_exp[i,] <- temp_pulls-comp4_full_pool_late[i]
}
comp5_early_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_early)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_early_diffs_exp[i,] <- temp_pulls-comp5_full_pool_early[i]
}
comp5_late_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_late)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_late_diffs_exp[i,] <- temp_pulls-comp5_full_pool_late[i]
}
comp6_early_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_early)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_early_diffs_exp[i,] <- temp_pulls-comp6_full_pool_early[i]
}
comp6_late_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_late)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_late_diffs_exp[i,] <- temp_pulls-comp6_full_pool_late[i]
}
par(mfrow=c(2,1))
all_exp_diff <- c(comp1_late_diffs_exp,comp2_late_diffs_exp,comp3_late_diffs_exp,
comp4_late_diffs_exp,comp5_late_diffs_exp,comp6_late_diffs_exp,
comp1_early_diffs_exp,comp2_early_diffs_exp,comp3_early_diffs_exp,
comp4_early_diffs_exp,comp5_early_diffs_exp,comp6_early_diffs_exp)
hist(c(all_exp_diff),xlim=c(-1,1))
hist(all_nov_diff,xlim=c(-1,1))
par(mfrow=c(3,2))
hist(comp1_early_diffs_exp)
hist(comp2_early_diffs_exp)
hist(comp3_early_diffs_exp)
hist(comp4_early_diffs_exp)
hist(comp5_early_diffs_exp)
hist(comp6_early_diffs_exp)
hist(comp1_late_diffs_exp)
hist(comp2_late_diffs_exp)
hist(comp3_late_diffs_exp)
hist(comp4_late_diffs_exp)
hist(comp5_late_diffs_exp)
hist(comp6_late_diffs_exp)
# Range graph -------------------------------------------------------------
range_size <- seq(.000,.7,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1 - range_percent_exp
range_percent_nov <- 1 - range_percent_nov
par(mfrow=c(1,1))
par(mar = c(3.5, 3, 1, 2))
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,.7),lty=2, col = "red",
lwd = 2,xlab = " ", ylab = " ",axes = FALSE)
points(x = range_size, y = range_percent_nov,type="l",col = "blue",lty = 3, lwd = 2)
legend(.36,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('red',"blue"),
cex = 1.3,bty = 'n',
y.intersp = 1)
title(xlab="Miscommunication Limit", line=1.8, cex.lab=1.8)
title(ylab="Proportion Beyond Limit", line=1.5, cex.lab=1.8)
axis(side=1,pos=0,cex.axis = 1.6,lwd = 2)
axis(side = 2, pos=0,cex.axis = 1.6,lwd = 2)
# Histograms of diff ------------------------------------------------------
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,1,.4)
c2 <- rgb(1,0,0,.4)
plot(hgB, col = c2, axes = FALSE, xlab = '', ylab = '', main = '') # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
axis(side=1,pos=.75,cex.axis = 1.6,lwd = 2)
axis(side = 2, pos=-1,cex.axis = 1.6,lwd = 2,labels = FALSE, tick = FALSE)
legend(.18,80000, c( "Experienced Listener","Inexperienced Listener"), col=c(c2, c1), lwd=10,cex = 1.3,
bty = 'n')
title(xlab="Experienced Speaker - Listener", line=1.8, cex.lab=1.8)
total_interpret_exp
nPulls = 100
comp1_early_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_early)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_early_diffs_exp[i,] <- temp_pulls-comp1_full_pool_early[i]
}
listener_pool
length(listener_pool)
48*12
comp1_late_diffs_exp <- matrix(NaN, nrow = nrow(comp1_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp1_full_pool_late)){
temp_listener_pool <- comp1_speaker_pool_temp[which(comp1_speaker_pool_temp$Participant!=comp1_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp1_late_diffs_exp[i,] <- temp_pulls-comp1_full_pool_late[i]
}
length(listener_pool)
comp2_early_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_early)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
total_interpret_exp <- length(listener_pool)+total_interpret_exp
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_early_diffs_exp[i,] <- temp_pulls-comp2_full_pool_early[i]
}
total_interpret_exp
comp2_speaker_pool_temp$EarlyResponse[which(comp2_speaker_pool_temp$SpeakerEarly==1)]
length(comp2_speaker_pool_temp$EarlyResponse[which(comp2_speaker_pool_temp$SpeakerEarly==1)])
nExperts
nExperts*12
length(all_exp_diff)
length(all_nov_diff)
