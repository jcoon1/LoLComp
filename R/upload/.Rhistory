}
comp2_early_diffs_exp[i,] <- temp_pulls-comp2_full_pool_early[i]
}
comp2_late_diffs_exp <- matrix(NaN, nrow = nrow(comp2_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp2_full_pool_late)){
temp_listener_pool <- comp2_speaker_pool_temp[which(comp2_speaker_pool_temp$Participant!=comp2_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp2_late_diffs_exp[i,] <- temp_pulls-comp2_full_pool_late[i]
}
comp3_early_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_early)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_early_diffs_exp[i,] <- temp_pulls-comp3_full_pool_early[i]
}
comp3_late_diffs_exp <- matrix(NaN, nrow = nrow(comp3_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp3_full_pool_late)){
temp_listener_pool <- comp3_speaker_pool_temp[which(comp3_speaker_pool_temp$Participant!=comp3_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp3_late_diffs_exp[i,] <- temp_pulls-comp3_full_pool_late[i]
}
comp4_early_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_early)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_early_diffs_exp[i,] <- temp_pulls-comp4_full_pool_early[i]
}
comp4_late_diffs_exp <- matrix(NaN, nrow = nrow(comp4_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp4_full_pool_late)){
temp_listener_pool <- comp4_speaker_pool_temp[which(comp4_speaker_pool_temp$Participant!=comp4_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp4_late_diffs_exp[i,] <- temp_pulls-comp4_full_pool_late[i]
}
comp5_early_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_early)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_early_diffs_exp[i,] <- temp_pulls-comp5_full_pool_early[i]
}
comp5_late_diffs_exp <- matrix(NaN, nrow = nrow(comp5_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp5_full_pool_late)){
temp_listener_pool <- comp5_speaker_pool_temp[which(comp5_speaker_pool_temp$Participant!=comp5_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp5_late_diffs_exp[i,] <- temp_pulls-comp5_full_pool_late[i]
}
comp6_early_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_early),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_early)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_early[i,2]),]
listener_pool <- temp_listener_pool$EarlyResponse[which(temp_listener_pool$SpeakerEarly==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_early_diffs_exp[i,] <- temp_pulls-comp6_full_pool_early[i]
}
comp6_late_diffs_exp <- matrix(NaN, nrow = nrow(comp6_full_pool_late),ncol = nPulls)
temp_pulls <- rep(NaN, nPulls)
for(i in 1:nrow(comp6_full_pool_late)){
temp_listener_pool <- comp6_speaker_pool_temp[which(comp6_speaker_pool_temp$Participant!=comp6_full_pool_late[i,2]),]
listener_pool <- temp_listener_pool$LateResponse[which(temp_listener_pool$SpeakerLate==1)]
for(j in 1:nPulls){
pull_index <- round(runif(1,min = 1, max = length(listener_pool)),0)
temp_pulls[j] <- listener_pool[pull_index]
}
comp6_late_diffs_exp[i,] <- temp_pulls-comp6_full_pool_late[i]
}
par(mfrow=c(2,1))
all_exp_diff <- c(comp1_late_diffs_exp,comp2_late_diffs_exp,comp3_late_diffs_exp,
comp4_late_diffs_exp,comp5_late_diffs_exp,comp6_late_diffs_exp,
comp1_early_diffs_exp,comp2_early_diffs_exp,comp3_early_diffs_exp,
comp4_early_diffs_exp,comp5_early_diffs_exp,comp6_early_diffs_exp)
hist(c(all_exp_diff),xlim=c(-1,1))
hist(all_nov_diff,xlim=c(-1,1))
par(mfrow=c(3,2))
hist(comp1_early_diffs_exp)
hist(comp2_early_diffs_exp)
hist(comp3_early_diffs_exp)
hist(comp4_early_diffs_exp)
hist(comp5_early_diffs_exp)
hist(comp6_early_diffs_exp)
hist(comp1_late_diffs_exp)
hist(comp2_late_diffs_exp)
hist(comp3_late_diffs_exp)
hist(comp4_late_diffs_exp)
hist(comp5_late_diffs_exp)
hist(comp6_late_diffs_exp)
max(all_nov_diff)
range_size <- seq(.001,.48,.001)
length(range_size)
range_size <- seq(.001,.48,.001)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))
}
range_size <- seq(.000,.5,.001)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))
}
plot(x = range_size, y = range_percent_nov,type="b",xlim = c(0,.5))
range_size <- seq(.000,.5,.001)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))
}
plot(x = range_size, y = range_percent_nov,type="b",xlim = c(0,.5))
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5))
range_size <- seq(.000,.5,.0001)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5))
range_size <- seq(.000,.5,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5))
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5),lty=2, col = "blue")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3)
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5),lty=2, col = "blue")
points(x = range_size, y = range_percent_exp,type="l",col = "red",lty = 3)
range_size <- seq(.000,.5,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,.5),lty=2, col = "blue")
points(x = range_size, y = range_percent_exp,type="l",col = "red",lty = 3)
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,1),lty=2, col = "blue")
points(x = range_size, y = range_percent_exp,type="l",col = "red",lty = 3)
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- .5 - range_size
range_hi <- .5 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2)
points(x = range_size, y = range_percent_exp,type="l",col = "red",lty = 3, lwd = 2)
length(which(all_nov_diff<.51))
length(which(all_nov_diff<.51&&all_nov_diff>.49))
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
plot(x = range_size, y = range_percent_nov,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2)
points(x = range_size, y = range_percent_exp,type="l",col = "red",lty = 3, lwd = 2)
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2)
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2)
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "% Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "% Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "% Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "% Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.7,.7,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = .7)
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "% Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.5,.8,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = .7)
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.5,.8,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = .7)
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.5,.8,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = 1)
range_size <- seq(.000,1,.01)
range_percent_nov <- range_size
range_percent_exp <- range_size
range_lo <- 0 - range_size
range_hi <- 0 + range_size
for(i in 1:length(range_size)){
temp_lo_nov <- all_nov_diff[which(all_nov_diff>range_lo[i])]
range_percent_nov[i] <- length(which(temp_lo_nov<range_hi[i]))/length(all_nov_diff)
temp_lo_exp <- all_exp_diff[which(all_exp_diff>range_lo[i])]
range_percent_exp[i] <- length(which(temp_lo_exp<range_hi[i]))/length(all_exp_diff)
}
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,1),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.4,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = 1)
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,.65),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.4,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = 1)
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,.65),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.3,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = 1)
range_percent_exp <- 1- range_percent_exp
range_percent_nov <- 1 - range_percent_nov
plot(x = range_size, y = range_percent_exp,type="l",xlim = c(0,.65),lty=2, col = "blue",
lwd = 2,xlab = "Miscommunication Limit", ylab = "Proportion Beyond Limit")
points(x = range_size, y = range_percent_nov,type="l",col = "red",lty = 3, lwd = 2)
legend(.3,.9,legend = c('Experienced Listener','Inexperienced Listener'),
lty = c(2,3),lwd = c(2,2),col = c('blue',"red"),
cex = 1.2,bty = 'n',
y.intersp = 1)
length(all_nov_diff)
length(all_exp_diff)-length(all_nov_diff)
b <- min(c(all_nov_diff,all_exp_diff)) – 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 12) # Make a neat vector for the breakpoints
hgA <- hist(A, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(B, breaks = ax, plot = FALSE) # Save 2nd histogram data
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
min(c(all_nov_diff,all_exp_diff))
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 12) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 12) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 20) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 10) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
ax
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- pretty(b:e, n = 20) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
ax
e <- max(c(all_nov_diff,all_exp_diff))
e
b
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgA, col = c1) # Plot 1st histogram using a transparent color
plot(hgB, col = c2, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE,density=TRUE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE,density=TRUE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(173,300,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(310,192,203, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(100,216,255,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,120, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,255,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,0,0, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,200,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(200,0,0, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,200,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(200,0,0, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
b <- min(c(all_nov_diff,all_exp_diff)) - 0.001 # Set the minimum for the breakpoints
e <- max(c(all_nov_diff,all_exp_diff)) # Set the maximum for the breakpoints
ax <- seq(-.95,1,.05) # Make a neat vector for the breakpoints
hgA <- hist(all_nov_diff, breaks = ax, plot = FALSE) # Save first histogram data
hgB <- hist(all_exp_diff, breaks = ax, plot = FALSE) # Save 2nd histogram data
c1 <- rgb(0,0,255,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,0,0, max = 255, alpha = 80, names = "lt.pink")
plot(hgB, col = c2) # Plot 1st histogram using a transparent color
plot(hgA, col = c1, add = TRUE) # Add 2nd histogram using different color
